So I want to set up a blog framework. Now, I'd love to make the whole thing but real talk that's going to eat time. I want a project I can finish a little quicker, and used to practice subskills. Namely, I want to focus on my styling and using TypeScript this time around. So here's my plan:

1. use an existing blog package to set up the backend.
2. install React on top.
3. install typescript.
4. style custom theme with React and TypeScript.
5. use typescript to fully set up the blog package.
6. make sure we can post, edit, and delete.
7. push to heroku/github pages.

7/10
Initialized repo
Set up node.js basics

7/11
laid out design plan for layout and modules
designed wireframe of site

7/12
set up Express; set up React app; laid out component design

7/14
laid out initial components; converted files to .tsx, installed node Types; installed and configured tsconfig.json, set up component tree
NEXT: psuedocode each section and assumed needs

7/15
working on default props; changed components to not need default props; working on getting tsx to compile

7/16
install in client: npm install --save typescript @types/node @types/react @types/react-dom @types/jest
restarted IDE: new types now recognized
still working on getting everything to run and import properly

7/17
moved components folder inside of src: import worked, able to launch frontend

7/18
pseudocoded layout and began to work on static site
NEXT: add bootstrap and set up grid layout as intended

7/19
layout design of app with bootstrap install

7/20
set up navbar in Bootstrap; working on aligning buttons

7/21
further refinement of padding and styling

7/23
further styling

7/29: added fontawesome icons, added searchbar, adjusted padding/font

7/30: continued working with adjusting the navbar search: will probably need to rebuild it to get to scale well; still need to add better responsive controls

8/1: cleaned up arrangement of footer, added better reponsive columns

8/3: converted containercontent to class with state and setting up types; working on conditional component rendering for profile.

8/5: restructuring and planning for state and properties

8/6
converted components to TypeScript format
added typed state, events, and props to get navbar working and switching components
added all component switching functions

8/9
developing social content links

8/11
added modals for portfolio gallery; adjusting social media icons

*****
X Add portfolio component.
X Set up link command to switch between components on clicking navbar buttons.
X Add social component and link.
X Add contact component and link.
B1 Adjust component size on smaller size for navbar.
B2 Fix gap in sticky filter.
C1 Reduce padding on components on responsive resize.
C2 Add component content.

*****
RESOURCES
https://github.com/typescript-cheatsheets/react (typescript cheatsheet for react)


*****
APP STRUCTURE
-components
--component.tsx files
-css
--css
-ts
--app.ts
index.html
app.js

COMPONENTS
main-container
navbar
content-container
--content components: about (maybe summary/picture components), portfolio, social, contact